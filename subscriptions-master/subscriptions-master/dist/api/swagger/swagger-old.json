{

    "swagger": "2.0",
  
    "info": {
  
      "version": "0.0.1",
  
      "title": "Accounts Microservice",
  
      "contact": {
  
        "email": "mail@agatsa.com"
  
      },
  
      "license": {
  
        "name": "Copyright Agatsa 2017. All rights reserved."
  
      }
  
    },
  
    "host": "localhost:3000",
  
    "basePath": "/api",
  
    "schemes": [
  
      "http",
  
      "https"
  
    ],
  
    "consumes": [
  
      "application/json"
  
    ],
  
    "produces": [
  
      "application/json"
  
    ],
  
    "tags": [
  
      {
  
        "name": "Plans",
  
        "description": "Microservice to manage users in a SaaS based architecture."
  
      }
  
    ],
  
    "paths": {
  
      "/accounts": {
  
        "x-swagger-router-controller": "accounts",
  
        "get": {
  
          "tags": [
  
            "Accounts"
  
          ],
  
          "description": "Returns the list of all users available",
  
          "operationId": "getAll",
  
          "parameters": [
  
            {
  
              "name": "Authorization",
  
              "in": "header",
  
              "description": "Authorization token",
  
              "required": true,
  
              "type": "string"
  
            }
  
          ],
  
          "responses": {
  
            "200": {
  
              "description": "Success",
  
              "schema": {
  
                "$ref": "#/definitions/accountsDocument"
  
              }
  
            },
  
            "404": {
  
              "description": "Not found. The requested resource could not be found. It is either unavailable or does not exist.",
  
              "schema": {
  
                "$ref": "#/definitions/errorDocument"
  
              }
  
            },
  
            "500": {
  
              "description": "Server error. The server encountered an unexpected condition which prevented it from fulfilling the request.",
  
              "schema": {
  
                "$ref": "#/definitions/errorDocument"
  
              }
  
            }
  
          }
  
        },
  
        "post": {
  
          "tags": [
  
            "Accounts"
  
          ],
  
          "description": "Creates a user object",
  
          "operationId": "create",
  
          "parameters": [
  
            {
  
              "name": "Authorization",
  
              "in": "header",
  
              "description": "Authorization token",
  
              "required": true,
  
              "type": "string"
  
            },
  
            {
  
              "name": "account",
  
              "in": "body",
  
              "description": "User account document to be created",
  
              "required": true,
  
              "schema": {
  
                "$ref": "#/definitions/accountsDocument"
  
              }
  
            }
  
          ],
  
          "responses": {
  
            "201": {
  
              "description": "Created",
  
              "schema": {
  
                "$ref": "#/definitions/accountsDocument"
  
              }
  
            },
  
            "500": {
  
              "description": "Server error. The server encountered an unexpected condition which prevented it from fulfilling the request.",
  
              "schema": {
  
                "$ref": "#/definitions/errorDocument"
  
              }
  
            }
  
          }
  
        }
  
      },
  
      "/account/{userId}": {
  
        "get": {
  
          "tags": [
  
            "Accounts"
  
          ],
  
          "description": "Get a user acount object",
  
          "operationId": "getById",
  
          "parameters": [
  
            {
  
              "name": "Authorization",
  
              "in": "header",
  
              "description": "Authorization token",
  
              "required": true,
  
              "type": "string"
  
            },
  
            {
  
              "name": "userId",
  
              "in": "path",
  
              "description": "User id",
  
              "required": true,
  
              "type": "string"
  
            }
  
          ],
  
          "responses": {
  
            "201": {
  
              "description": "Get account by userId",
  
              "schema": {
  
                "$ref": "#/definitions/accountsDocument"
  
              }
  
            },
  
            "500": {
  
              "description": "Server error. The server encountered an unexpected condition which prevented it from fulfilling the request.",
  
              "schema": {
  
                "$ref": "#/definitions/errorDocument"
  
              }
  
            }
  
          }
  
        },
  
        "put": {
  
          "tags": [
  
            "Accounts"
  
          ],
  
          "description": "Get a user acount object",
  
          "operationId": "updateById",
  
          "parameters": [
  
            {
  
              "name": "Authorization",
  
              "in": "header",
  
              "description": "Authorization token",
  
              "required": true,
  
              "type": "string"
  
            },
  
            {
  
              "name": "userId",
  
              "in": "path",
  
              "description": "User id",
  
              "required": true,
  
              "type": "string"
  
            }
  
          ],
  
          "responses": {
  
            "201": {
  
              "description": "Get account by userId",
  
              "schema": {
  
                "$ref": "#/definitions/accountsDocument"
  
              }
  
            },
  
            "500": {
  
              "description": "Server error. The server encountered an unexpected condition which prevented it from fulfilling the request.",
  
              "schema": {
  
                "$ref": "#/definitions/errorDocument"
  
              }
  
            }
  
          }
  
        }
  
      },
  
      "/swagger": {
  
        "x-swagger-pipe": "swagger_raw"
  
      }
  
    },
  
    "definitions": {
  
      "accountsDocument": {
  
        "type": "object",
  
        "properties": {
  
          "data": {
  
            "title": "accountResource",
  
            "type": "object",
  
            "allOf": [
  
              {
  
                "properties": {
  
                  "type": {
  
                    "type": "string",
  
                    "enum": [
  
                      "primary",
  
                      "secondary"
  
                    ]
  
                  },
  
                  "id": {
  
                    "type": "string",
  
                    "description": "Unique identifier"
  
                  },
  
                  "attributes": {
  
                    "type": "object"
  
                  },
  
                  "links": {
  
                    "type": "object",
  
                    "required": [
  
                      "self",
  
                      "next",
  
                      "last"
  
                    ],
  
                    "properties": {
  
                      "self": {
  
                        "type": "string"
  
                      },
  
                      "next": {
  
                        "type": "string"
  
                      },
  
                      "last": {
  
                        "type": "string"
  
                      }
  
                    }
  
                  },
  
                  "meta": {
  
                    "type": "object",
  
                    "properties": {
  
                      "creationDate": {
  
                        "type": "string",
  
                        "format": "date-time"
  
                      },
  
                      "modificationDate": {
  
                        "type": "string",
  
                        "format": "date-time"
  
                      }
  
                    }
  
                  },
  
                  "relationships": {},
  
                  "included": {}
  
                }
  
              }
  
            ]
  
          }
  
        }
  
      },
  
      "errorDocument": {
  
        "title": "error",
  
        "type": "object",
  
        "properties": {
  
          "errors": {
  
            "type": "array",
  
            "items": {
  
              "type": "object",
  
              "properties": {
  
                "title": {
  
                  "type": "string"
  
                },
  
                "code": {
  
                  "type": "string"
  
                },
  
                "detail": {
  
                  "type": "string"
  
                },
  
                "source": {
  
                  "type": "object",
  
                  "properties": {
  
                    "pointer": {
  
                      "type": "string"
  
                    },
  
                    "parameter": {
  
                      "type": "string"
  
                    }
  
                  }
  
                },
  
                "meta": {
  
                  "type": "object"
  
                }
  
              },
  
              "required": [
  
                "title",
  
                "code",
  
                "detail"
  
              ]
  
            }
  
          }
  
        }
  
      }
  
    }
  
  }